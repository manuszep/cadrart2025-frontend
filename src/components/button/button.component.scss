@use "sass:math";
@import "../../styles/variables";
@import "../../styles/functions";

@mixin cadrartButtonHoverColor($color) {
  &:not([disabled]):hover {
    box-shadow: inset 0 0 0 1px transparent, 0 0 10px 1px rgba(getColor($color), .5);
    background-color: lighten(getColor($color), 15%);
    color: getTextColorFor($color);
  }
}

@mixin cadrartButtonColor($color) {
  background-color: getColor($color);
  color: getTextColorFor($color);

  small {
    background-color: darken(getColor($color), 30%);
    color: isColorDark(darken(getColor($color), 30%));
  }

  &:disabled {
    background-color: desaturate(getColor($color), 70);
  }

  &.cadrart-button--outline {
    box-shadow: inset 0 0 0 1px getColor($color), 0 0 10px 1px transparent;
    color: getColor($color);
    background-color: transparent;

    &:disabled {
      color: desaturate(getColor($color), 70);
      box-shadow: inset 0 0 0 1px desaturate(getColor($color), 70);
    }

    &:not([disabled]):hover {
      color: getTextColorFor($color);
    }
  }

  @include cadrartButtonHoverColor($color);
}

.cadrart-button {
  @include cadrartButtonColor(primary);
  position: relative;
  max-width: 300px;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  line-height: 1;
  padding: math.div($spacing-medium, 2) $spacing-medium;
  border: none;
  border-radius: $border-radius;
  font-size: 1rem;
  font-weight: 400;
  white-space: nowrap;
  text-decoration: none;
  cursor: pointer;
  transition: box-shadow $transition-duration, color $transition-duration, background-color $transition-duration, max-width $transition-duration, padding $transition-duration;

  &--justify-left {
    justify-content: flex-start;
  }

  &--justify-right {
    justify-content: flex-end;
  }

  &__content {
    max-width: 300px;
    transition: max-width $transition-duration ease-in;
  }

  small {
    font-style: italic;
    position: absolute;
    right: -7px;
    top: -7px;
    border-radius: 3px;
    padding: 3px;
    font-size: 10px;
    line-height: 1;
    pointer-events: none;
    opacity: 0;
    transition: opacity .3s;
  }

  &:hover small {
    opacity: 1;
  }

  cadrart-icon {
    transition: margin $transition-duration;
    transition-delay: 0;
  }

  &--icon-left cadrart-icon {
    margin-right: $spacing-small;
  }

  &--icon-right cadrart-icon {
    margin-left: $spacing-small;
  }

  &--icon-only {
    padding: math.div($spacing-medium, 2);

    cadrart-icon {
      margin: 0;
      transition-delay: math.div($transition-duration, 2);
    }

    .cadrart-button__content {
      max-width: 0;
      overflow: hidden;
      transition: max-width $transition-duration ease-out;
    }
  }

  &:disabled {
    cursor: not-allowed;
    opacity: .5;
  }

  &--small {
    padding: math.div($spacing-small, 2) $spacing-small;

    &.cadrart-button--icon-only {
      padding: math.div($spacing-small, 2);
    }

    font-size: 80%;
  }

  &--large {
    padding: math.div($spacing-large, 2) $spacing-large;

    &.cadrart-button--icon-only {
      padding: math.div($spacing-large, 2);
    }
  }

  &--grow {
    width: 100%;
  }

  &--secondary {
    @include cadrartButtonColor(secondary);
  }

  &--warning {
    @include cadrartButtonColor(warning);
  }

  &--danger {
    @include cadrartButtonColor(danger);
  }

  &--success {
    @include cadrartButtonColor(success);
  }

  &--info {
    @include cadrartButtonColor(info);
  }

  &--neutral {
    @include cadrartButtonColor(neutral);
  }

  &--dark {
    @include cadrartButtonColor(dark);
  }

  &--transparent {
    @include cadrartButtonColor(transparent);
  }

  &--hover-primary {
    @include cadrartButtonHoverColor(primary);
  }

  &--hover-secondary {
    @include cadrartButtonHoverColor(secondary);
  }

  &--hover-warning {
    @include cadrartButtonHoverColor(warning);
  }

  &--hover-danger {
    @include cadrartButtonHoverColor(danger);
  }

  &--hover-success {
    @include cadrartButtonHoverColor(success);
  }

  &--hover-info {
    @include cadrartButtonHoverColor(info);
  }

  &--hover-neutral {
    @include cadrartButtonHoverColor(neutral);
  }

  &--hover-dark {
    @include cadrartButtonHoverColor(dark);
  }

  &--hover-transparent {
    @include cadrartButtonHoverColor(transparent);
  }
}
