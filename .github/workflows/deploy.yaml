name: Deploy
on:
  release:
    types: [published]

permissions: write-all

jobs:
  build:
    name: Build and push Docker image
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Get Tags
        id: tag
        uses: ildug/get-tag-action@v1

      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push the Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: linux/amd64
          file: ./infrastructure/docker/Dockerfile
          push: true
          build-args: |
            CADRART_BUILD_VERSION=${{ steps.tag.outputs.version }}
            NPM_TOKEN=${{ secrets.NPM_TOKEN }}
          tags: |
            ghcr.io/manuszep/cadrart2025-frontend:latest
            ghcr.io/manuszep/cadrart2025-frontend:${{ steps.tag.outputs.version }}

  deploy:
    name: Deploy to production
    runs-on: ubuntu-22.04
    needs: build
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Get Tags
        id: tag
        uses: ildug/get-tag-action@v1

      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Kubernetes set context
        uses: Azure/k8s-set-context@v3
        with:
          method: service-account
          k8s-url: ${{ secrets.KUBERNETES_URL }}
          k8s-secret: ${{ secrets.KUBERNETES_SECRET }}

      - name: Get current test environment
        id: get-env
        run: |
          COLOR_TEST=$(kubectl get configmap environment-config -n cadrart -o jsonpath='{.data.COLOR_TEST}')
          echo "COLOR_TEST=$COLOR_TEST" >> $GITHUB_ENV
          echo "Current test environment: $COLOR_TEST"

      - name: Deploy with variable substitution
        run: |
          # Create temporary files with variable substitution
          sed "s/\$COLOR_TEST/$COLOR_TEST/g" ./infrastructure/kubernetes/deployment.yaml > /tmp/Deployment_frontend-$COLOR_TEST
          sed "s/\$COLOR_TEST/$COLOR_TEST/g" ./infrastructure/kubernetes/service.yaml > /tmp/Service_frontend-$COLOR_TEST

          # Apply the substituted manifests
          kubectl apply -f /tmp/Deployment_frontend-$COLOR_TEST,/tmp/Service_frontend-$COLOR_TEST --insecure-skip-tls-verify --namespace cadrart

          # Update the image
          kubectl set image deployment/frontend-$COLOR_TEST frontend-$COLOR_TEST=ghcr.io/manuszep/cadrart2025-frontend:${{ steps.tag.outputs.version }} -n cadrart

          # Wait for rollout
          kubectl rollout status deployment/frontend-$COLOR_TEST -n cadrart
